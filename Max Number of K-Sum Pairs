class Solution:
    def maxOperations(self, nums: List[int], k: int) -> int:
        """
        another way can we solve this like two sum
        
        tc = O(n)
        sc = O(n)
        """
        ht = {}
        count = 0
        for no in nums:
            if k - no in ht:
                ht[k - no] -= 1
                if ht[k - no] == 0:
                    del ht[k - no]
                count += 1
            else:
                if no not in ht:
                    ht[no] = 0
                ht[no] += 1
        return count
    
    def usingSorting(self,nums,k):
        """
        we can sort the array first
        then take two pointers moving in same direction
        
        tc = O(nlogn + n)
        sc = O(n)
        """
        nums.sort()
        first = 0
        last = len(nums) - 1
        count = 0
        while first < last:
            if nums[first] + nums[last] == k:
                first += 1
                last -= 1
                count += 1
            elif nums[first] + nums[last] < k:
                first += 1
            else:
                last -= 1
        return count
