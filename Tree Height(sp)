# Definition for a  binary tree node
# class TreeNode:
#    def __init__(self, x):
#        self.val = x
#        self.left = None
#        self.right = None

class Solution:
    # @param A : root node of tree
    # @return an integer
    def solve(self, A):
        def iterative(A):
            st = []
            if A is None:
                return 0
            st.append((A,1))
            maxHeight = 0
            while st:
                node,height = st.pop()
                maxHeight = max(maxHeight,height)
                if node.left:
                    st.append((node.left,height + 1))
                if node.right:
                    st.append((node.right,height + 1))
            return maxHeight

        def height(A):
            if A is None:
                return 0
            leftSubtreeHeight = height(A.left)
            rightSubtreeHeight = height(A.right)
            return max(leftSubtreeHeight,rightSubtreeHeight) + 1
        return iterative(A)
